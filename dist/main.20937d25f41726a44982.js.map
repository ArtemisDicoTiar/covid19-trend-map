{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/MapView/MapView.tsx","webpack:///./src/components/Covid19TrendLayer/Covid19TrendLayer.tsx","webpack:///./src/components/QueryTaskLayer/QueryTaskLayer.tsx","webpack:///./src/AppConfig.ts","webpack:///./src/components/ControlPanel/ControlPanel.tsx","webpack:///./src/utils/queryCovid19Data.ts","webpack:///./src/components/App/App.tsx","webpack:///./src/index.tsx"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","MapView","webmapId","children","mapDivRef","React","useRef","useState","mapView","setMapView","initMapView","a","loadModules","WebMap","view","container","current","map","portalItem","id","when","useEffect","loadCss","style","position","top","left","width","height","ref","Children","child","cloneElement","Covid19TrendLayer","activeTrendData","features","visibleScale","size","trendLayer","setTrendLayer","init","GraphicsLayer","layer","minScale","min","maxScale","max","add","draw","CIMSymbol","Graphic","Point","removeAll","feature","geometry","pathConfirmed","pathDeaths","pathNewCases","frame","pathData","path","symbol","type","symbolLayers","enable","scaleSymbolsProportionally","respectFrame","markerGraphics","paths","color","graphic","latitude","y","longitude","x","QueryTaskLayer","itemId","outFields","onSelect","setLayer","FeatureLayer","queryFeatures","event","scale","where","toMap","returnGeometry","results","on","ThemeStyle","SwitchBtnData","label","ControlPanel","trendDataOnChange","className","onClick","viewBox","fill","fetchCovid19Data","countyFIPS","stateName","requestUrl","axios","DefaultTrend","urlFns","parseQuery","trend","App","setActiveTrendData","covid19USCountiesData","setCovid19USCountiesData","covid19USStatesData","setCovid19USStatesData","fetchData","AppConfig","queryResUSCounties","queryResUSStates","countyFeature","attributes","stateFeature","setDefaultOptions","url","ReactDOM","render","document","getElementById"],"mappings":"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","file":"main.20937d25f41726a44982.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([52,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import React, {\r\n    useEffect\r\n} from 'react';\r\n\r\nimport { loadModules, loadCss } from 'esri-loader';\r\nimport IMapView from 'esri/views/MapView';\r\nimport IWebMap from \"esri/WebMap\";\r\n\r\ninterface Props {\r\n    webmapId: string;\r\n};\r\n\r\nconst MapView:React.FC<Props> = ({\r\n    webmapId,\r\n    children\r\n})=>{\r\n\r\n    const mapDivRef = React.useRef<HTMLDivElement>();\r\n\r\n    const [ mapView, setMapView] = React.useState<IMapView>(null);\r\n\r\n    const initMapView = async()=>{\r\n        \r\n        type Modules = [typeof IMapView, typeof IWebMap];\r\n\r\n        try {\r\n            const [ \r\n                MapView, \r\n                WebMap \r\n            ] = await (loadModules([\r\n                'esri/views/MapView',\r\n                'esri/WebMap',\r\n            ]) as Promise<Modules>);\r\n\r\n            const view = new MapView({\r\n                container: mapDivRef.current,\r\n                map: new WebMap({\r\n                    portalItem: {\r\n                        id: webmapId\r\n                    }  \r\n                }),\r\n            });\r\n\r\n            view.when(()=>{\r\n                setMapView(view);\r\n            });\r\n\r\n        } catch(err){   \r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    useEffect(()=>{\r\n        loadCss();\r\n        initMapView();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <div \r\n                style={{\r\n                    position: 'absolute',\r\n                    top: 0,\r\n                    left: 0,\r\n                    width: '100%',\r\n                    height: '100%',\r\n                }}\r\n                ref={mapDivRef}\r\n            ></div>\r\n            { \r\n                React.Children.map(children, (child)=>{\r\n                    return React.cloneElement(child as React.ReactElement<any>, {\r\n                        mapView,\r\n                    });\r\n                }) \r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MapView;","import React, {\r\n    useEffect,\r\n    useState\r\n} from 'react';\r\n\r\nimport { loadModules } from 'esri-loader';\r\nimport IMapView from 'esri/views/MapView';\r\nimport ICIMSymbol from 'esri/symbols/CIMSymbol';\r\nimport IGraphic from 'esri/Graphic';\r\nimport IPoint from 'esri/geometry/Point';\r\nimport IGraphicsLayer from 'esri/layers/GraphicsLayer';\r\n\r\nimport {\r\n    PathData,\r\n    TrendData,\r\n    Covid19TrendPaths,\r\n    Covid19USCountyTrendData,\r\n    Covid19USStateTrendData\r\n} from 'covid19-trend-map';\r\n\r\ntype Feature = {\r\n    attributes: any;\r\n    geometry: {\r\n        x: number;\r\n        y: number;\r\n    };\r\n}\r\n\r\ntype Covid19TrendFeature = Feature & Covid19TrendPaths\r\n\r\ntype Props = {\r\n    activeTrendData: TrendData;\r\n    size?: number;\r\n    visibleScale?: {\r\n        min: number;\r\n        max: number;\r\n    }\r\n    mapView?:IMapView;\r\n}\r\n\r\ntype Covid19TrendLayerProps = {\r\n    features: Covid19TrendFeature[]\r\n} & Props;\r\n\r\nconst Covid19TrendLayer:React.FC<Covid19TrendLayerProps> = ({\r\n    activeTrendData,\r\n    features,\r\n    visibleScale,\r\n    size = 20,\r\n    mapView\r\n}) => {\r\n\r\n    const [ trendLayer, setTrendLayer ] = useState<IGraphicsLayer>();\r\n\r\n    const init = async()=>{\r\n        type Modules = [\r\n            typeof IGraphicsLayer\r\n        ];\r\n\r\n        try {\r\n            const [ \r\n                GraphicsLayer,\r\n            ] = await (loadModules([\r\n                'esri/layers/GraphicsLayer',\r\n            ]) as Promise<Modules>);\r\n\r\n            const layer = new GraphicsLayer({\r\n                minScale: visibleScale && visibleScale.min,\r\n                maxScale: visibleScale && visibleScale.max\r\n            });\r\n\r\n            mapView.map.add(layer);\r\n\r\n            setTrendLayer(layer);\r\n\r\n        } catch(err){\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    const draw = async()=>{\r\n\r\n        type Modules = [\r\n            typeof ICIMSymbol,\r\n            typeof IGraphic,\r\n            typeof IPoint\r\n        ];\r\n\r\n        try {\r\n            const [ \r\n                CIMSymbol,\r\n                Graphic,\r\n                Point\r\n            ] = await (loadModules([\r\n                'esri/symbols/CIMSymbol',\r\n                'esri/Graphic',\r\n                'esri/geometry/Point'\r\n            ]) as Promise<Modules>);\r\n\r\n            trendLayer.removeAll();\r\n\r\n            // Iterate over each feature\r\n            for (const feature of features) {\r\n\r\n                const {\r\n                    geometry,\r\n                    pathConfirmed,\r\n                    pathDeaths,\r\n                    pathNewCases\r\n                } = feature;\r\n\r\n                const pathDataByTrendName: { [key in TrendData]: PathData } = {\r\n                    'confirmed': pathConfirmed,\r\n                    'death': pathDeaths,\r\n                    'new-cases': pathNewCases\r\n                };\r\n\r\n                const pathData = pathDataByTrendName[activeTrendData];\r\n\r\n                const {\r\n                    frame,\r\n                    path\r\n                } = pathData;\r\n\r\n                // Create the CIM symbol:\r\n                //  - set the size value\r\n                //  - assign the generated path to the marker's geometry\r\n                const symbol = new CIMSymbol({\r\n                    data: {\r\n                        type: 'CIMSymbolReference',\r\n                        symbol: {\r\n                            type: \"CIMPointSymbol\",\r\n                            symbolLayers: [\r\n                                {\r\n                                    type: \"CIMVectorMarker\",\r\n                                    enable: true,\r\n                                    scaleSymbolsProportionally: false,\r\n                                    respectFrame: false,\r\n                                    size,\r\n                                    frame,\r\n                                    markerGraphics: [{\r\n                                        type: \"CIMMarkerGraphic\",\r\n                                        geometry: {\r\n                                            paths: [path]\r\n                                        },\r\n                                        symbol: {\r\n                                            type: \"CIMLineSymbol\",\r\n                                            symbolLayers: [{\r\n                                                type: \"CIMSolidStroke\",\r\n                                                width: 1,\r\n                                                color: [161, 13, 34, 255]\r\n                                            }]\r\n                                        }\r\n                                    }]\r\n                                }\r\n                            ]\r\n                        }\r\n                    }\r\n                });\r\n\r\n                const graphic = new Graphic({\r\n                    geometry: new Point({\r\n                        latitude: geometry.y,\r\n                        longitude: geometry.x\r\n                    }),\r\n                    symbol\r\n                })\r\n\r\n                // Add the symbol on the county's centroid\r\n                trendLayer.add(graphic);\r\n            }\r\n\r\n        } catch(err){   \r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    useEffect(()=>{\r\n        if(mapView){\r\n            init();\r\n        }\r\n    }, [mapView]);\r\n\r\n    useEffect(()=>{\r\n        if(trendLayer && features){\r\n            draw();\r\n        }\r\n    }, [trendLayer, features, activeTrendData]);\r\n\r\n    return null;\r\n}\r\n\r\nexport default Covid19TrendLayer;\r\n","import React, {\r\n    useEffect,\r\n    useState\r\n} from 'react'\r\n\r\nimport { loadModules } from 'esri-loader';\r\n\r\nimport IMapView from 'esri/views/MapView';\r\nimport IFeatureLayer from 'esri/layers/FeatureLayer';\r\nimport IPoint from 'esri/geometry/Point';\r\nimport IGraphic from 'esri/Graphic';\r\n\r\ntype Props = {\r\n    itemId: string;\r\n    outFields?: string[];\r\n    mapView?:IMapView;\r\n    visibleScale?: {\r\n        min: number;\r\n        max: number;\r\n    }\r\n    onSelect: (feature:IGraphic)=>void;\r\n}\r\n\r\nconst QueryTaskLayer:React.FC<Props> = ({\r\n    itemId,\r\n    outFields,\r\n    mapView,\r\n    visibleScale,\r\n    onSelect\r\n}) => {\r\n\r\n    const [ layer, setLayer ] = useState<IFeatureLayer>();\r\n\r\n    const init = async()=>{\r\n\r\n        type Modules = [\r\n            typeof IFeatureLayer\r\n        ];\r\n\r\n        try {\r\n            const [ \r\n                FeatureLayer,\r\n            ] = await (loadModules([\r\n                'esri/layers/FeatureLayer',\r\n            ]) as Promise<Modules>);\r\n\r\n            const layer = new FeatureLayer({\r\n                portalItem: {\r\n                    id: itemId\r\n                },\r\n                minScale: visibleScale && visibleScale.min,\r\n                maxScale: visibleScale && visibleScale.max\r\n            });\r\n\r\n            setLayer(layer);\r\n\r\n        } catch(err){\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    const queryFeatures = async(event:__esri.MapViewClickEvent)=>{\r\n        // console.log(mapView.scale)\r\n\r\n        if( mapView.scale < layer.minScale && \r\n            mapView.scale > layer.maxScale\r\n        ){\r\n            const results = await layer.queryFeatures({\r\n                where: '1=1',\r\n                geometry: mapView.toMap(event),\r\n                returnGeometry: true,\r\n                outFields: outFields || ['*']\r\n            });\r\n    \r\n            if(results.features && results.features.length){\r\n                onSelect(results.features[0]);\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(mapView){\r\n            init();\r\n        }\r\n    }, [mapView]);\r\n\r\n    useEffect(() => {\r\n        if(layer && mapView){\r\n            mapView.on(\"click\", (event)=>{\r\n                queryFeatures(event);\r\n            });\r\n        }\r\n    }, [layer])\r\n\r\n    return null;\r\n}\r\n\r\nexport default QueryTaskLayer\r\n","export default {\r\n    'webmap-id':'1bff921ddf7044c3b5ba34e8494a2073',\r\n    'covid19-data-us-states-url': 'https://covid19.vannizhang.com/us-states-paths.json',\r\n    'covid19-data-us-counties-url': 'https://covid19.vannizhang.com/us-counties-paths.json',\r\n    'us-counties-layer-visible-scale': {\r\n        'min': 7500000,\r\n        'max': 0\r\n    },\r\n    'us-states-layer-visible-scale': {\r\n        'min': 73957190,\r\n        'max': 7500001\r\n    }\r\n};\r\n\r\nexport const ThemeStyle = {\r\n    'theme-color-red': '#A10D22',\r\n    'theme-color-khaki': '#E8E2D2',\r\n    'theme-color-khaki-bright': '#EFEADB'\r\n};","import React from 'react'\r\nimport { TrendData } from 'covid19-trend-map';\r\nimport {\r\n    ThemeStyle\r\n} from '../../AppConfig';\r\n\r\ntype Props = {\r\n    activeTrendData: TrendData;\r\n    trendDataOnChange: (vale:TrendData)=>void;\r\n}\r\n\r\nconst SwitchBtnData: {\r\n    label: string;\r\n    value: TrendData\r\n}[] = [\r\n    {\r\n        label: 'WEEKLY CASES',\r\n        value: 'new-cases'\r\n    },\r\n    {\r\n        label: 'CASES',\r\n        value: 'confirmed'\r\n    },\r\n    {\r\n        label: 'DEATHS',\r\n        value: 'death'\r\n    }\r\n];\r\n\r\nconst ControlPanel: React.FC<Props> = ({\r\n    activeTrendData,\r\n    trendDataOnChange\r\n}) => {\r\n    \r\n    const getSwitchBtns = ()=>{\r\n        return SwitchBtnData.map(d=>{\r\n\r\n            const {\r\n                value, label\r\n            } = d;\r\n\r\n            return (\r\n                <div\r\n                    key={value}\r\n                    style={{\r\n                        'width': '150px',\r\n                        'height': '100%',\r\n                        'color': ThemeStyle[\"theme-color-red\"],\r\n                        'backgroundColor': activeTrendData === value ? ThemeStyle[\"theme-color-khaki-bright\"] : 'transparent',\r\n                        'display': 'flex',\r\n                        'alignItems': 'center',\r\n                        'justifyContent': 'center',\r\n                        'boxSizing':'border-box',\r\n                        'borderBottom': `solid 4px ${ activeTrendData === value ? ThemeStyle[\"theme-color-red\"] : 'transparent' }`,\r\n                        'borderRight': `solid 1px #E0D8C1`,\r\n                        'cursor': 'pointer'\r\n                    }}\r\n                    onClick={trendDataOnChange.bind(this, value)}\r\n                >\r\n                    <span className='avenir-bold'>{label}</span>\r\n                </div>\r\n            )\r\n        })\r\n    };\r\n\r\n    const getInfoBtn = ()=>{\r\n\r\n        return (\r\n            <div\r\n                style={{\r\n                    'width': '60px',\r\n                    'height': '100%',\r\n                    'display': 'flex',\r\n                    'alignItems': 'center',\r\n                    'justifyContent': 'center',\r\n                    'cursor': 'pointer'\r\n                }}\r\n            >\r\n                <svg \r\n                    viewBox=\"0 0 24 24\" \r\n                    height='24' \r\n                    width='24'\r\n                    fill='#B2A584'\r\n                >\r\n                    <path d=\"M12.5 7.5a1 1 0 1 1 1-1 1.002 1.002 0 0 1-1 1zM13 18V9h-2v1h1v8h-1v1h3v-1zm9.8-5.5A10.3 10.3 0 1 1 12.5 2.2a10.297 10.297 0 0 1 10.3 10.3zm-1 0a9.3 9.3 0 1 0-9.3 9.3 9.31 9.31 0 0 0 9.3-9.3z\"/>\r\n                    <path fill=\"none\" d=\"M0 0h24v24H0z\"/>\r\n                </svg>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n    return (\r\n        <div\r\n            style={{\r\n                'position': 'absolute',\r\n                'top': '10px',\r\n                'right': '10px',\r\n                'boxShadow': `0 0 10px 2px #B1A483`,\r\n            }}\r\n        >\r\n            <div\r\n                style={{\r\n                    'backgroundColor': ThemeStyle[\"theme-color-red\"],\r\n                    'color': ThemeStyle[\"theme-color-khaki-bright\"],\r\n                    'height': '20px',\r\n                    'lineHeight': '20px',\r\n                    'width': '100%',\r\n                    'textAlign': 'center'\r\n                }}\r\n            >\r\n                <span className='avenir-bold' style={{\r\n                    'fontSize': '0.785rem'\r\n                }}>CORONAVIRUS TRENDS PER 100,000 PEOPLE, SINCE FEBRUARY, UPDATED DAILY</span>\r\n            </div>\r\n\r\n            <div\r\n                style={{\r\n                    'display': 'flex',\r\n                    'height': '60px',\r\n                    'width': '100%',\r\n                    'boxSizing':'border-box',\r\n                    \r\n                    'backgroundColor': ThemeStyle[\"theme-color-khaki\"]\r\n                }}\r\n            >\r\n                { getSwitchBtns() }\r\n                { getInfoBtn() }\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ControlPanel\r\n","import axios from 'axios';\r\n\r\ntype Covid19CasesByTimeFeature = {\r\n    attributes: {\r\n        dt: string;\r\n        Confirmed: number;\r\n        Deaths: number;\r\n        NewCases: number;\r\n    }\r\n};\r\n\r\nconst USCountiesCovid19CasesByTimeFeatureServiceURL = 'https://services9.arcgis.com/6Hv9AANartyT7fJW/ArcGIS/rest/services/USCounties_cases_V1/FeatureServer/1';\r\n\r\ntype FetchCovid19DataOptions = {\r\n    countyFIPS?: string;\r\n    stateName?: string;\r\n}\r\n\r\nexport const fetchCovid19Data = async({\r\n    countyFIPS,\r\n    stateName\r\n}:FetchCovid19DataOptions):Promise<Covid19CasesByTimeFeature[]>=>{\r\n\r\n    const requestUrl = countyFIPS\r\n        ? `${USCountiesCovid19CasesByTimeFeatureServiceURL}/query/?f=json&where=FIPS=${countyFIPS}&outFields=dt,Confirmed,Deaths,NewCases`\r\n        : `${USCountiesCovid19CasesByTimeFeatureServiceURL}/query/?where=ST_Name+%3D+%27${stateName}%27&objectIds=&time=&resultType=none&outFields=*&returnIdsOnly=false&returnUniqueIdsOnly=false&returnCountOnly=false&returnDistinctValues=false&cacheHint=false&orderByFields=dt&groupByFieldsForStatistics=ST_Name%2C+dt&outStatistics=%5B%0D%0A++%7B%0D%0A++++%22statisticType%22%3A+%22sum%22%2C%0D%0A++++%22onStatisticField%22%3A+%22Confirmed%22%2C+%0D%0A++++%22outStatisticFieldName%22%3A+%22Confirmed%22%0D%0A++%7D%2C%0D%0A++%7B%0D%0A++++%22statisticType%22%3A+%22sum%22%2C%0D%0A++++%22onStatisticField%22%3A+%22Deaths%22%2C+%0D%0A++++%22outStatisticFieldName%22%3A+%22Deaths%22%0D%0A++%7D%2C%0D%0A++%7B%0D%0A++++%22statisticType%22%3A+%22sum%22%2C%0D%0A++++%22onStatisticField%22%3A+%22NewCases%22%2C%0D%0A++++%22outStatisticFieldName%22%3A+%22NewCases%22%0D%0A++%7D++%0D%0A%5D&having=&resultOffset=&resultRecordCount=&sqlFormat=none&f=pjson&token=`;\r\n    \r\n    try {\r\n        const {data} = await axios.get(requestUrl);\r\n\r\n        if(data && data.features){\r\n            // console.log(data.features)\r\n            return data.features\r\n        }\r\n\r\n    } catch(err){\r\n        console.error(err);\r\n    }\r\n\r\n    return null;\r\n};","import React, {\r\n    useEffect,\r\n    useState\r\n} from 'react';\r\n\r\nimport axios from 'axios';\r\n\r\nimport MapView from '../MapView/MapView';\r\nimport Covid19TrendLayer from '../Covid19TrendLayer/Covid19TrendLayer';\r\nimport QueryTaskLayer from '../QueryTaskLayer/QueryTaskLayer';\r\nimport ControlPanel from '../ControlPanel/ControlPanel';\r\n\r\nimport {\r\n    TrendData,\r\n    Covid19USCountyTrendData,\r\n    Covid19USStateTrendData\r\n} from 'covid19-trend-map'\r\n\r\nimport AppConfig from '../../AppConfig';\r\n\r\nimport {\r\n    urlFns\r\n} from 'helper-toolkit-ts';\r\n\r\nimport {\r\n    fetchCovid19Data\r\n} from '../../utils/queryCovid19Data';\r\n\r\nconst UrlSearchParams = urlFns.parseQuery();\r\n// console.log(UrlSearchParams.trend)\r\n\r\nconst DefaultTrend:TrendData = UrlSearchParams.trend;\r\n\r\nconst App = () => {\r\n\r\n    const [ activeTrendData, setActiveTrendData ] = useState<TrendData>(DefaultTrend || 'new-cases');\r\n\r\n    // const [ showNormalizedData, setShowNormalizedData ] = useState<boolean>(true);\r\n\r\n    const [ covid19USCountiesData, setCovid19USCountiesData ] = useState<Covid19USCountyTrendData[]>();\r\n\r\n    const [ covid19USStatesData, setCovid19USStatesData ] = useState<Covid19USStateTrendData[]>();\r\n\r\n    const fetchData = async()=>{\r\n\r\n        try {\r\n            const queryResUSCounties = await axios.get<Covid19USCountyTrendData[]>(AppConfig[\"covid19-data-us-counties-url\"]);\r\n            setCovid19USCountiesData(queryResUSCounties.data);\r\n            // console.log(queryResUSCounties)\r\n\r\n            const queryResUSStates = await axios.get<Covid19USStateTrendData[]>(AppConfig[\"covid19-data-us-states-url\"]);\r\n            setCovid19USStatesData(queryResUSStates.data);\r\n            // console.log(queryResUSStates)\r\n\r\n        } catch(err){\r\n            console.error(err);\r\n        }\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <MapView \r\n                webmapId={AppConfig[\"webmap-id\"]}\r\n            >\r\n                <Covid19TrendLayer \r\n                    key='US-Counties'\r\n                    features={covid19USCountiesData}\r\n                    activeTrendData={activeTrendData}\r\n                    size={18}\r\n                    visibleScale={AppConfig[\"us-counties-layer-visible-scale\"]}\r\n                />\r\n\r\n                <Covid19TrendLayer \r\n                    key='US-States'\r\n                    features={covid19USStatesData}\r\n                    activeTrendData={activeTrendData}\r\n                    size={24}\r\n                    visibleScale={AppConfig[\"us-states-layer-visible-scale\"]}\r\n                />\r\n\r\n                <QueryTaskLayer \r\n                    key='query-4-US-Counties'\r\n                    itemId='7566e0221e5646f99ea249a197116605'\r\n                    outFields={['FIPS']}\r\n                    visibleScale={AppConfig[\"us-counties-layer-visible-scale\"]}\r\n                    onSelect={async(countyFeature)=>{\r\n                        const data = await fetchCovid19Data({\r\n                            countyFIPS: countyFeature.attributes['FIPS']\r\n                        });\r\n\r\n                        console.log(data);\r\n                    }}\r\n                />\r\n\r\n                <QueryTaskLayer \r\n                    key='query-4-US-States'\r\n                    itemId='99fd67933e754a1181cc755146be21ca'\r\n                    outFields={['STATE_NAME']}\r\n                    visibleScale={AppConfig[\"us-states-layer-visible-scale\"]}\r\n                    onSelect={async(stateFeature)=>{\r\n                        const data = await fetchCovid19Data({\r\n                            stateName: stateFeature.attributes['STATE_NAME']\r\n                        });\r\n\r\n                        console.log(data);\r\n                    }}\r\n                />\r\n            </MapView>\r\n\r\n            <ControlPanel \r\n                activeTrendData={activeTrendData}\r\n                trendDataOnChange={setActiveTrendData}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import './styles/index.scss';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { setDefaultOptions } from 'esri-loader';\r\n\r\nimport App from './components/App/App';\r\n\r\nsetDefaultOptions({ url: 'https://js.arcgis.com/next/'})\r\n\r\nReactDOM.render(\r\n    <App/>, \r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}