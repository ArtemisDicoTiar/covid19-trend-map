{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/MapView/MapView.tsx","webpack:///./src/components/Covid19TrendLayer/Covid19TrendLayer.tsx","webpack:///./src/AppConfig.ts","webpack:///./src/components/App/App.tsx","webpack:///./src/index.tsx"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","MapView","webmapId","children","mapDivRef","React","useRef","useState","mapView","setMapView","initMapView","a","loadModules","WebMap","view","container","current","map","portalItem","id","when","useEffect","loadCss","style","position","top","left","width","height","ref","Children","child","cloneElement","Covid19TrendLayer","activeTrendData","visibleScale","trendLayer","setTrendLayer","init","GraphicsLayer","layer","minScale","min","maxScale","max","add","draw","CIMSymbol","Graphic","Point","removeAll","feature","attributes","geometry","confirmed","deaths","newCases","path","values","val","idx","xmax","ymax","reduce","prev","curr","Math","Number","NEGATIVE_INFINITY","ratio","floor","forEach","ceil","symbol","type","symbolLayers","enable","scaleSymbolsProportionally","respectFrame","size","frame","xmin","ymin","markerGraphics","paths","color","graphic","latitude","y","longitude","x","DefaultTrend","urlFns","parseQuery","trend","App","covid19USCountiesData","setCovid19USCountiesData","covid19USStatesData","setCovid19USStatesData","fetchData","axios","AppConfig","queryResUSCounties","queryResUSStates","setDefaultOptions","url","ReactDOM","render","document","getElementById"],"mappings":"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","file":"main.50d0a7741ba468909f75.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([52,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import React, {\r\n    useEffect\r\n} from 'react';\r\n\r\nimport { loadModules, loadCss } from 'esri-loader';\r\nimport IMapView from 'esri/views/MapView';\r\nimport IWebMap from \"esri/WebMap\";\r\n\r\ninterface Props {\r\n    webmapId: string;\r\n};\r\n\r\nconst MapView:React.FC<Props> = ({\r\n    webmapId,\r\n    children\r\n})=>{\r\n\r\n    const mapDivRef = React.useRef<HTMLDivElement>();\r\n\r\n    const [ mapView, setMapView] = React.useState<IMapView>(null);\r\n\r\n    const initMapView = async()=>{\r\n        \r\n        type Modules = [typeof IMapView, typeof IWebMap];\r\n\r\n        try {\r\n            const [ \r\n                MapView, \r\n                WebMap \r\n            ] = await (loadModules([\r\n                'esri/views/MapView',\r\n                'esri/WebMap',\r\n            ]) as Promise<Modules>);\r\n\r\n            const view = new MapView({\r\n                container: mapDivRef.current,\r\n                map: new WebMap({\r\n                    portalItem: {\r\n                        id: webmapId\r\n                    }  \r\n                }),\r\n            });\r\n\r\n            view.when(()=>{\r\n                setMapView(view);\r\n            });\r\n\r\n        } catch(err){   \r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    useEffect(()=>{\r\n        loadCss();\r\n        initMapView();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <div \r\n                style={{\r\n                    position: 'absolute',\r\n                    top: 0,\r\n                    left: 0,\r\n                    width: '100%',\r\n                    height: '100%',\r\n                }}\r\n                ref={mapDivRef}\r\n            ></div>\r\n            { \r\n                React.Children.map(children, (child)=>{\r\n                    return React.cloneElement(child as React.ReactElement<any>, {\r\n                        mapView,\r\n                    });\r\n                }) \r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MapView;","import React, {\r\n    useEffect,\r\n    useState\r\n} from 'react';\r\n\r\nimport { loadModules } from 'esri-loader';\r\nimport IMapView from 'esri/views/MapView';\r\nimport ICIMSymbol from 'esri/symbols/CIMSymbol';\r\nimport IGraphic from 'esri/Graphic';\r\nimport IPoint from 'esri/geometry/Point';\r\nimport IGraphicsLayer from 'esri/layers/GraphicsLayer';\r\n\r\nimport {\r\n    TrendData,\r\n    Covid19USCountyTrendData,\r\n    Covid19USStateTrendData\r\n} from 'covid19-trend-map'\r\n\r\ntype DataItem = {\r\n    attributes: any;\r\n    geometry: {\r\n        x: number;\r\n        y: number;\r\n    };\r\n    confirmed: number[];\r\n    deaths: number[];\r\n    newCases: number[];\r\n}\r\n\r\ntype Props = {\r\n    activeTrendData: TrendData;\r\n    data: DataItem[];\r\n    visibleScale?: {\r\n        min: number;\r\n        max: number;\r\n    }\r\n    mapView?:IMapView;\r\n}\r\n\r\nconst Covid19TrendLayer:React.FC<Props> = ({\r\n    activeTrendData,\r\n    data,\r\n    visibleScale,\r\n    mapView\r\n}) => {\r\n\r\n    const [ trendLayer, setTrendLayer ] = useState<IGraphicsLayer>();\r\n\r\n    const init = async()=>{\r\n        type Modules = [\r\n            typeof IGraphicsLayer\r\n        ];\r\n\r\n        try {\r\n            const [ \r\n                GraphicsLayer,\r\n            ] = await (loadModules([\r\n                'esri/layers/GraphicsLayer',\r\n            ]) as Promise<Modules>);\r\n\r\n            const layer = new GraphicsLayer({\r\n                minScale: visibleScale && visibleScale.min,\r\n                maxScale: visibleScale && visibleScale.max\r\n            });\r\n\r\n            mapView.map.add(layer);\r\n\r\n            setTrendLayer(layer);\r\n\r\n        } catch(err){\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    const draw = async()=>{\r\n\r\n        type Modules = [\r\n            typeof ICIMSymbol,\r\n            typeof IGraphic,\r\n            typeof IPoint\r\n        ];\r\n\r\n        try {\r\n            const [ \r\n                CIMSymbol,\r\n                Graphic,\r\n                Point\r\n            ] = await (loadModules([\r\n                'esri/symbols/CIMSymbol',\r\n                'esri/Graphic',\r\n                'esri/geometry/Point'\r\n            ]) as Promise<Modules>);\r\n\r\n            trendLayer.removeAll();\r\n\r\n            // Iterate over each feature\r\n            for (const feature of data) {\r\n\r\n                const {\r\n                    attributes,\r\n                    geometry,\r\n                    confirmed,\r\n                    deaths,\r\n                    newCases\r\n                } = feature;\r\n\r\n                const numbersByTrendName: { [key in TrendData]: number[] } = {\r\n                    'confirmed': confirmed,\r\n                    'death': deaths,\r\n                    'new-cases': newCases\r\n                };\r\n\r\n                const values = numbersByTrendName[activeTrendData] || newCases;\r\n                const path = values.map((val, idx)=>[ idx, val ]);\r\n\r\n                const xmin = 0;\r\n                const ymin = 0;\r\n                const xmax = values.length;\r\n\r\n                let ymax = path.reduce((prev, curr) => Math.max(prev, curr[1]), Number.NEGATIVE_INFINITY);\r\n                \r\n                // console.log(ymin, ymax)\r\n\r\n                if ( ymax < xmax ){\r\n                    // console.log('use xmax as ymax', ymax, xmax);\r\n                    ymax = xmax;\r\n\r\n                } else {\r\n                    // normalize the graph otherwise\r\n                    // by normalizing the y values\r\n                    const ratio = Math.floor(( xmax / ymax ) * 1000) / 1000;\r\n                    // console.log(ratio)\r\n\r\n                    path.forEach((p) => {\r\n                        p[1] = p[1] * ratio;\r\n                    });\r\n                    \r\n                    ymax = Math.ceil(ymax * ratio);\r\n\r\n                    console.log(ymax);\r\n                }\r\n\r\n                // Create the CIM symbol:\r\n                //  - set the size value\r\n                //  - assign the generated path to the marker's geometry\r\n                const symbol = new CIMSymbol({\r\n                    data: {\r\n                        type: 'CIMSymbolReference',\r\n                        symbol: {\r\n                            type: \"CIMPointSymbol\",\r\n                            symbolLayers: [\r\n                                {\r\n                                    type: \"CIMVectorMarker\",\r\n                                    enable: true,\r\n                                    scaleSymbolsProportionally: false,\r\n                                    respectFrame: false,\r\n                                    size: 20,\r\n                                    frame: {\r\n                                        xmin,\r\n                                        ymin,\r\n                                        xmax,\r\n                                        ymax\r\n                                    },\r\n                                    markerGraphics: [{\r\n                                        type: \"CIMMarkerGraphic\",\r\n                                        geometry: {\r\n                                            paths: [path]\r\n                                        },\r\n                                        symbol: {\r\n                                            type: \"CIMLineSymbol\",\r\n                                            symbolLayers: [{\r\n                                                type: \"CIMSolidStroke\",\r\n                                                width: 1,\r\n                                                color: [161, 13, 34, 255]\r\n                                            }]\r\n                                        }\r\n                                    }]\r\n                                }\r\n                            ]\r\n                        }\r\n                    }\r\n                });\r\n\r\n                const graphic = new Graphic({\r\n                    geometry: new Point({\r\n                        latitude: geometry.y,\r\n                        longitude: geometry.x\r\n                    }),\r\n                    symbol\r\n                })\r\n\r\n                // Add the symbol on the county's centroid\r\n                trendLayer.add(graphic);\r\n            }\r\n\r\n        } catch(err){   \r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    useEffect(()=>{\r\n        if(mapView){\r\n            init();\r\n        }\r\n    }, [mapView]);\r\n\r\n    useEffect(()=>{\r\n        if(trendLayer && data){\r\n            draw();\r\n        }\r\n    }, [trendLayer, data, activeTrendData]);\r\n\r\n    return null;\r\n}\r\n\r\n// const Covid19TrendLayerContainer: React.FC<Props> = ({\r\n//     activeTrendData,\r\n//     data,\r\n//     mapView\r\n// })=>{\r\n\r\n//     const getValuesToRender = ()=>{\r\n\r\n//     }\r\n\r\n//     return null;\r\n// }\r\n\r\nexport default Covid19TrendLayer\r\n","export default {\r\n    'webmap-id':'3ba87408b7fa45f2b2af653ed48bd678',\r\n    'covid19-data-us-states-url': 'https://covid19.vannizhang.com/us-states.json',\r\n    'covid19-data-us-counties-url': 'https://covid19.vannizhang.com/us-counties.json',\r\n    'us-counties-layer-visible-scale': {\r\n        'min': 7500000,\r\n        'max': 0\r\n    },\r\n    'us-states-layer-visible-scale': {\r\n        'min': 0,\r\n        'max': 7500001\r\n    }\r\n};","import React, {\r\n    useEffect,\r\n    useState\r\n} from 'react';\r\n\r\nimport axios from 'axios';\r\n\r\nimport MapView from '../MapView/MapView';\r\nimport Covid19TrendLayer from '../Covid19TrendLayer/Covid19TrendLayer';\r\n\r\nimport {\r\n    TrendData,\r\n    Covid19USCountyTrendData,\r\n    Covid19USStateTrendData\r\n} from 'covid19-trend-map'\r\n\r\nimport AppConfig from '../../AppConfig';\r\n\r\nimport {\r\n    urlFns\r\n} from 'helper-toolkit-ts';\r\n\r\nconst UrlSearchParams = urlFns.parseQuery();\r\n// console.log(UrlSearchParams.trend)\r\n\r\nconst DefaultTrend:TrendData = UrlSearchParams.trend;\r\n\r\nconst App = () => {\r\n\r\n    const [ activeTrendData, setActiveTrendData ] = useState<TrendData>(DefaultTrend || 'new-cases');\r\n\r\n    const [ covid19USCountiesData, setCovid19USCountiesData ] = useState<Covid19USCountyTrendData[]>();\r\n\r\n    const [ covid19USStatesData, setCovid19USStatesData ] = useState<Covid19USStateTrendData[]>();\r\n\r\n    const fetchData = async()=>{\r\n\r\n        try {\r\n            const queryResUSCounties = await axios.get<Covid19USCountyTrendData[]>(AppConfig[\"covid19-data-us-counties-url\"]);\r\n            setCovid19USCountiesData(queryResUSCounties.data);\r\n            // console.log(queryResUSCounties)\r\n\r\n            const queryResUSStates = await axios.get<Covid19USStateTrendData[]>(AppConfig[\"covid19-data-us-states-url\"]);\r\n            setCovid19USStatesData(queryResUSStates.data);\r\n            // console.log(queryResUSStates)\r\n\r\n        } catch(err){\r\n            console.error(err);\r\n        }\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, []);\r\n\r\n    return (\r\n        <MapView \r\n            webmapId={AppConfig[\"webmap-id\"]}\r\n        >\r\n            <Covid19TrendLayer \r\n                key='US-Counties'\r\n                data={covid19USCountiesData}\r\n                activeTrendData={activeTrendData}\r\n                visibleScale={AppConfig[\"us-counties-layer-visible-scale\"]}\r\n            />\r\n\r\n            <Covid19TrendLayer \r\n                key='US-States'\r\n                data={covid19USStatesData}\r\n                activeTrendData={activeTrendData}\r\n                visibleScale={AppConfig[\"us-states-layer-visible-scale\"]}\r\n            />\r\n        </MapView>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import './styles/index.scss';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { setDefaultOptions } from 'esri-loader';\r\n\r\nimport App from './components/App/App';\r\n\r\nsetDefaultOptions({ url: 'https://js.arcgis.com/next/'})\r\n\r\nReactDOM.render(\r\n    <App/>, \r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}